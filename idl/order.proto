syntax = "proto3";

package order;

import "idl/cart.proto";

option go_package = "order;rpcOrder";

service OrderService {
  rpc PlaceOrder(PlaceOrderReq) returns (PlaceOrderResp) {}
  rpc ListOrder(ListOrderReq) returns (ListOrderResp) {}
  rpc ListOrderFromSeller(ListOrderFromSellerReq) returns(ListOrderFromSellerResp) {}
  rpc MarkOrderPaid(MarkOrderPaidReq) returns (MarkOrderPaidResp) {}
  rpc MakeSureOrderExpired(MakeSureOrderExpiredReq) returns (MakeSureOrderExpiredResp) {}
  rpc MarkOrderShipped(MarkOrderShippedReq) returns (MarkOrderShippedResp) {}
  rpc MarkOrderCompleted(MarkOrderCompletedReq) returns (MarkOrderCompletedResp) {}
}

message Address {
  string address = 1;
  string phone = 2;
  string name = 3;
}

message PlaceOrderReq {
  string user_id = 1;
  string user_currency = 2;

  Address address = 3;
  repeated OrderItem order_items = 4;
}

message OrderItem {
  cart.CartItem item = 1;
  float cost = 2;
}

message OrderResult {
  string order_id = 1;
  float cost = 2;
}

message PlaceOrderResp {
  OrderResult order = 1;
  int64 status_code = 2;
}

message ListOrderReq {
  string user_id = 1;
}




message Order {
  string oid = 1;
  string uid = 2;
  string user_currency = 3;
  string name = 4;
  string phone = 5;
  string address = 6;
  string pid = 7;
  int64 quantity = 8;
  float cost = 9;
  int64 status = 10;
  int32 created_at = 11;
}


message ListOrderResp {
  repeated Order orders = 1;
  int64 status_code = 2;
}

message MarkOrderPaidReq {
  string user_id = 1;
  string order_id = 2;
}

message MarkOrderPaidResp {
  int64 status_code = 1;
}

message MakeSureOrderExpiredReq {
  string pay_id = 1;
}

message MakeSureOrderExpiredResp {
  bool IsExpired = 1;
  int64 status_code = 2;
}

message MarkOrderShippedReq {
  string user_id = 1;
  string order_id = 2;
}

message MarkOrderShippedResp {
  int64 status_code = 1;
}

message MarkOrderCompletedReq {
  string user_id = 1;
  string order_id = 2;
}

message MarkOrderCompletedResp {
  int64 status_code = 1;
}

message ListOrderFromSellerReq {
  string seller_id = 1;
}

message ListOrderFromSellerResp {
  repeated Order orders = 1;
  int64 status_code = 2;
}